I've gotten this running on windows, but I did it by essentially 
turning off signals.  This makes it hard to recommend in its 
current state, but hopefully putting them back in is not as hard
as it looks.  

Actually, it would appear to be every bit as hard as it looks.  Because of
this, new signal conditions will be used --

CTRL_C_EVENT is _ignored_. However, it seems the application itself still
will drop out of edit mode, and exit the program, if it is not actively
doing something else.  Use of CTRL-C is not recommended.

CTRL_CLOSE_EVENT saves to ed.hup on close.  However, there is an odd behavior,
where if you are in a non writable directory, the file will still
be saved to the directory.  I do not believe the file is actually in that
directory, however, since it does not appear in Explorer, and it is not
in their if you access that directory again with admin privileges.  But the
file can be read/manipulated by using ed on it, or cat from msys also worked.
Note, windows utilities do *NOT* see the file -- so cat will work, but type
will not.  

I'm sure there is a work around for this, using the WIN32 api, but I don't
need this right now, so it just is what it is for now.  

The following is the original ed README from FreeBSD 10.  

----------------------------------------------------

$FreeBSD: release/10.0.0/bin/ed/README 50471 1999-08-27 23:15:48Z peter $

ed is an 8-bit-clean, POSIX-compliant line editor.  It should work with
any regular expression package that conforms to the POSIX interface
standard, such as GNU regex(3).

If reliable signals are supported (e.g., POSIX sigaction(2)), it should
compile with little trouble.  Otherwise, the macros SPL1() and SPL0()
should be redefined to disable interrupts.

The following compiler directives are recognized:
DES		- to add encryption support (requires crypt(3))
NO_REALLOC_NULL	- if realloc(3) does not accept a NULL pointer
BACKWARDS	- for backwards compatibility
NEED_INSQUE	- if insque(3) is missing

The file `POSIX' describes extensions to and deviations from the POSIX
standard.

The ./test directory contains regression tests for ed. The README
file in that directory explains how to run these.

For a description of the ed algorithm, see Kernighan and Plauger's book
"Software Tools in Pascal," Addison-Wesley, 1981.
